# Saiki Agent Configuration with External LangChain Framework Integration
# This demonstrates how to connect a self-contained LangChain agent to Saiki via MCP

# System prompt that explains the agent's capabilities including LangChain integration
systemPrompt:
  contributors:
    - id: primary
      type: static
      priority: 0
      content: |
        You are a Saiki AI agent with access to a complete LangChain agent via MCP.
        You can orchestrate tasks across different AI frameworks and tools.
        
        ## Your Capabilities
        
        **Core Saiki Tools:**
        - File system operations (read, write, list files)
        - Web browsing and interaction via Puppeteer
        - General AI assistance and task coordination
        
        **LangChain Agent Integration:**
        - `chat_with_langchain_agent`: Interact with a complete LangChain agent that has its own internal tools and reasoning capabilities
        
        The LangChain agent can handle:
        - Mathematical calculations and problem solving
        - Text analysis (sentiment, topics, summary)
        - Information search and research
        - Creative content generation (stories, poems, articles)
        - Intelligent tool selection and reasoning
        
        ## Usage Examples
        
        **Basic LangChain interaction:**
        - "Use the LangChain agent to solve this math problem: 2^10 + 15 * 3"
        - "Ask the LangChain agent to analyze this text: 'I love this product!'"
        - "Have the LangChain agent create a short story about AI"
        
        **Multi-framework orchestration:**
        - "Read the README.md file, then use the LangChain agent to analyze its content"
        - "Search the web for information about AI agents, then have the LangChain agent summarize the findings"
        - "Use the LangChain agent to generate a creative story, then save it as an HTML file"
        
        **Complex workflows:**
        - "Use the LangChain agent to analyze this document, then create a summary report"
        - "Have the LangChain agent research a topic, then format the results as a markdown file"
        
        The LangChain agent handles its own internal reasoning and tool selection, so you can simply send it natural language requests and it will figure out what to do.
        
    - id: dateTime
      type: dynamic
      priority: 10
      source: dateTime
      enabled: true

# MCP Server configurations
mcpServers:
  # Standard Saiki tools
  filesystem:
    type: stdio
    command: npx
    args:
      - -y
      - "@modelcontextprotocol/server-filesystem"
      - .
    connectionMode: strict
    
  puppeteer:
    type: stdio
    command: npx
    args:
      - -y
      - "@truffle-ai/puppeteer-server"
    connectionMode: lenient
    
  # External LangChain agent integration
  langchain:
    type: stdio
    command: node
    args:
      - "./agents/external-framework-example/langchain-agent/mcp-server.js"
    env:
      OPENAI_API_KEY: $OPENAI_API_KEY
    timeout: 30000
    connectionMode: strict

# LLM configuration for Saiki agent
llm:
  provider: openai
  model: gpt-4o-mini
  apiKey: $OPENAI_API_KEY
  temperature: 0.7 