# describes the mcp servers to use
mcpServers:
  filesystem:
    type: stdio
    command: npx
    args:
      - -y
      - "@modelcontextprotocol/server-filesystem"
      - .
  puppeteer:
    type: stdio
    command: npx
    args:
      - -y
      - "@truffle-ai/puppeteer-server"
  # hf:
  #   type: stdio
  #   command: npx
  #   args:
  #     - -y
  #     - "@llmindset/mcp-hfspace"

# System prompt configuration - defines the agent's behavior and instructions
systemPrompt:
  contributors:
    - id: primary
      type: static
      priority: 0
      content: |
        You are a helpful AI assistant with access to tools.
        Use these tools when appropriate to answer user queries.
        You can use multiple tools in sequence to solve complex problems.
        After each tool result, determine if you need more information or can provide a final answer.

        When using Puppeteer tools for web interaction:
        1. Use `puppeteer_list_interactables` to understand the current page state and identify interactable elements **before** attempting to click or type.
        2. Examine the returned list. Identify the desired element based on its text and attributes.
        3. **Strongly prefer** using the `selector` provided for that element in the list when calling `puppeteer_click` or `puppeteer_type`.
        4. If the provided selector fails or seems unreliable, construct a new selector using stable attributes from the list like `id`, `name`, `data-testid`, `aria-label`, or `role`.
        5. **Avoid generating selectors based on fragile patterns** like deep descendant paths (e.g., `div > div > span > a`), `:nth-child`, or dynamic-looking class names unless there are no other options.
        6. **Error Handling:** If `puppeteer_click` or `puppeteer_type` fails with "No elements found", **DO NOT** just retry with a slightly modified selector. Instead:
            a. Call `puppeteer_list_interactables` **again** to get the fresh page state.
            b. Re-identify the target element in the **new** list.
            c. Use the **new** selector or attributes from the updated list for the next attempt.
        7. Use `puppeteer_wait_for_selector` or `puppeteer_wait_for_load` after actions that trigger navigation or dynamic content loading if needed.
        8. **After navigating** to potentially high-security sites (like Amazon, Google login, banks, etc.), **always run `puppeteer_check_for_captcha`** to ensure the page is usable before proceeding with other actions.
        9. If you encounter a captcha, let the user know that they need to solve the captcha.
    - id: dateTime
      type: dynamic
      priority: 10
      source: dateTime
      enabled: true

# # describes the llm configuration
llm:
  provider: openai
  model: gpt-5-mini
  apiKey: $OPENAI_API_KEY

# Storage configuration - uses a two-tier architecture: cache (fast, ephemeral) and database (persistent, reliable)
# Memory cache with file-based database (good for development with persistence)
storage:
  cache:
    type: in-memory
  database:
    type: sqlite
    # path: ./data/dexto.db

# Starter prompts - predefined prompts that appear as clickable buttons in the WebUI
starterPrompts:
  - id: quick-start
    title: "Quick Start Guide üìö"
    description: "Learn the basics and see what you can do"
    prompt: "I'd like to get started quickly. Can you show me a few examples of what you can do and help me understand how to work with you?"
    category: learning
    icon: "üìö"
    priority: 9
  
  - id: coding-help
    title: "Coding Assistant üíª"
    description: "Get help with programming, debugging, and code review"
    prompt: "I need help with coding. Can you assist me with writing, debugging, or reviewing code? I'm working on a project and could use some guidance."
    category: coding
    icon: "üíª"
    priority: 8
  
  - id: data-analysis
    title: "Data Analysis üìä"
    description: "Process data, create visualizations, and perform analysis"
    prompt: "I have some data I'd like to analyze. Can you help me process it, create visualizations, or perform statistical analysis? I'm looking to gain insights from my data."
    category: analysis
    icon: "üìä"
    priority: 6
  
  - id: tool-demo
    title: "Tool Demonstration ‚ö°"
    description: "See the tools in action with practical examples"
    prompt: "I'd like to see your tools in action. Can you pick one of your most interesting tools and demonstrate it with a practical example? Show me what it can do and how it works."
    category: tools
    icon: "‚ö°"
    priority: 5

  - id: snake-game
    title: "Create Snake Game üêç"
    description: "Build a fun interactive game with HTML, CSS, and JavaScript"
    prompt: "Create a snake game in a new directory with HTML, CSS, and JavaScript, then open it in the browser for me to play."
    category: coding
    icon: "üêç"
    priority: 4

  - id: connect-tools
    title: "Connect New Tools üîß"
    description: "Browse and add MCP servers to extend capabilities"
    prompt: "I want to connect new tools to expand my capabilities. Can you help me understand what MCP servers are available and how to add them?"
    category: tools
    icon: "üîß"
    priority: 3

## To use Google Gemini, replace the LLM section with Google Gemini configuration below
## Similar for anthropic/groq/etc.
# llm:
#   provider: google
#   model: gemini-2.0-flash
#   apiKey: $GOOGLE_GENERATIVE_AI_API_KEY
